#!/bin/bash

script_path=$(dirname $([ -L $0 ] && realpath $0 || echo $0))

linker_image_lookup_result="$(docker images -q docker-arm64-crystalcross-linker)"
compiler_image_lookup_result="$(docker images -q docker-arm64-crystalcross-compiler)"
emulator_image_lookup_result="$(docker images -q docker-arm64-crystalcross-emulator)"

if [ "$linker_image_lookup_result" = "" ] ||  [ "$compiler_image_lookup_result" = "" ] || [ "$emulator_image_lookup_result" = "" ]; then

    echo "No Built Docker Images Detected, Building..."
    $script_path/docker/install-images

fi

if [ -z "$1" ]
    then
        echo "arm64-elf-crystal - ARM64 Linux Crystal Cross-Compiler Wrapper (Docker)"
        echo "USAGE arm64-elf-crystal [command] [switches] [program file] -- [arguments]"
        
        printf "\nCommand:"
        printf "\n\t build                    build an executable"
        printf "\n\t run                      build and run program"
        printf "\n\t env                      print Crystal environment information"
        printf "\n\t [OTHER]                  passes arguments directly to crystal instance"

        exit
fi

command=${1}
arguments=${@:2}

caller_directory=$(pwd)

command_target_file="$script_path/commands/$command"

if [ ! -f $command_target_file ]; then
    docker run -v $caller_directory:/crystal-project-env docker-arm64-crystalcross-compiler crystal $command $arguments
    exit
fi

$command_target_file $arguments

